package com.cosmo.socialdisplays;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import android.app.ActivityManager;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.util.Log;
import android.widget.Toast;

import com.gajah.inkcaseLib.InkCase;
import com.gajah.inkcaseLib.InkCaseUtils;

public class RunningAppReceiver extends BroadcastReceiver {
	 
    public final String TAG = "CheckRunningApplicationReceiver"; 
    Context mContext;
    MainActivity mActivity = null;
    
    @Override
    public void onReceive(Context mContext, Intent anIntent) {
    	this.mContext = mContext;

    	try {
    		ActivityManager am = (ActivityManager) mContext
                    .getSystemService(Context.ACTIVITY_SERVICE);
             
            List<ActivityManager.RunningTaskInfo> alltasks = am
                    .getRunningTasks(1);
 
            for (ActivityManager.RunningTaskInfo aTask : alltasks) {
 
            	
            	Drawable icon = null;
            	icon = mContext.getPackageManager().getApplicationIcon(
            			aTask.topActivity.getPackageName());
            	
            	mContext.getPackageManager().getPackageInfo(aTask.topActivity.getPackageName(), 0);
            	
            	ComponentName componentInfo = aTask.topActivity;
            	   componentInfo.getPackageName();
            	
            	icon = mContext.getResources().getDrawable(R.drawable.c);
            	   
//            	mActivity.sendToInkCase("");
//            	sendToInkCase(icon);
//            	Log.e("icon: ", "" + icon);
//            	Log.e("classname: ", "" + aTask.topActivity.getClassName());
//            	Log.e("packagename: ", "" + aTask.topActivity.getPackageName());
//            	Log.e("componentInfo: ", "" + componentInfo);
            }
 
        } catch (Throwable t) {
            Log.i(TAG, "Throwable caught: "
                        + t.getMessage(), t);
        }
         
    }
    
    
    
    public void sendToInkCase(Drawable icon) {
    	
    	AssetManager assetManager = mContext.getAssets();

        InputStream istr;
        Bitmap bitmap = null;
        try {
            istr = assetManager.open("fb.png");
            bitmap = BitmapFactory.decodeStream(istr);
        } catch (IOException e) {
            // handle exception
        }
        
        if (bitmap == null)
			throw new RuntimeException("No image to send");

        File fileToSend = new File(mContext.getExternalCacheDir(), "helloInkCase.jpg");
		try {
			FileOutputStream fOut = new FileOutputStream(fileToSend);

			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
			fOut.flush();
			fOut.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
        
    	
    	try {
    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
    	    sharingIntent.setType("image/jpeg");
    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
    	 } catch (Exception e) {
    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
    	 }
    	
//    	BitmapDrawable bitDw = ((BitmapDrawable) icon);
//        Bitmap bitmap = bitDw.getBitmap();
//    	
//    	
//    	//Bitmap icon = BitmapFactory.decodeResource(mContext.getResources(),R.drawable.c);
//    	//Bitmap bitmap = BitmapFactory.decode;
//    	
//        
//        Log.i(TAG, "" + icon);
//        if (icon == null)
//			throw new RuntimeException("No image to send");
//
//        File fileToSend = new File(mContext.getCacheDir(), "helloInkCase.jpg");
//		try {
//			FileOutputStream fOut = new FileOutputStream(fileToSend);
//
//			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
//			fOut.flush();
//			fOut.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//    	
//    	try {
//    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
//    	    sharingIntent.setType("image/jpeg");
//    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
//    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
//    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
//    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
//    	 } catch (Exception e) {
//    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
//    	 }
    	
    	
	}
}


package com.cosmo.socialdisplays;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningTaskInfo;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

import com.gajah.inkcaseLib.InkCase;
import com.gajah.inkcaseLib.InkCaseUtils;


public class MainActivity extends Activity {

	public final String TAG = "MainActivity";
	
	public List<Drawable> icons = null;
	
	private RunningAppReceiver mReceiver = null;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
          
        // Start broadcast receiver may be StartupReceiver not started on BOOT_COMPLETED
        // Check AndroidManifest.xml file
        initialize();
        //Drawable icon = getDrawable(R.drawable.)
        
        icons = new ArrayList<Drawable>();
        
        getAllICONS();
        
        for(Drawable icon : icons) {
        	Log.i(TAG, "" + icon.toString());
        }
        
        sendToInkCase("");
    }
	
	
 
    private void initialize() {
         
        // Start receiver with the name StartupReceiver_Manual_Start
        // Check AndroidManifest.xml file
        getBaseContext().getApplicationContext().sendBroadcast(
                new Intent("StartupReceiver_Manual_Start"));
    }


    public void getAllICONS() {

        PackageManager pm = getPackageManager();

        ActivityManager am1 = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);

        List<RunningTaskInfo> processes = am1
                .getRunningTasks(Integer.MAX_VALUE);

        if (processes != null) {
            for (int k = 0; k < processes.size(); k++) {
	                // String pkgName = app.getPackageName();
	                String packageName = processes.get(k).topActivity
	                        .getPackageName();
	                Log.e("packageName-->", "" + packageName);
	                Log.e("Activity:", "" + processes.get(k).topActivity.getClassName());
	                Drawable ico = null;
	                try {
//	                	Log.i(TAG, "TRY");
//	                    String pName = (String) pm.getApplicationLabel(pm
//	                            .getApplicationInfo(packageName,
//	                                    PackageManager.GET_META_DATA));
//	                    
	                    ApplicationInfo a = pm.getApplicationInfo(packageName,
	                            PackageManager.GET_META_DATA);
	                    ApplicationInfo b = getPackageManager().getApplicationInfo(packageName, PackageManager.GET_META_DATA);
	                    ico = getPackageManager().getApplicationIcon(
	                            processes.get(k).topActivity.getPackageName());
	                    getPackageManager();
	                    Log.e("ico-->", "" + ico);
	                    
	                    //final PackageManager pm2 = getApplicationContext().getPackageManager();
	                    ApplicationInfo ai;
	                    try {
	                        ai = pm.getApplicationInfo( this.getPackageName(), 0);
	                    } catch (final NameNotFoundException e) {
	                        ai = null;
	                    }
	                    final String applicationName = (String) (ai != null ? pm.getApplicationLabel(ai) : "(unknown)");

	                    
	                    Log.e("LOGO", "" +applicationName );
	
	                } catch (NameNotFoundException e) {
	                    Log.e("ERROR", "Unable to find icon for package '"
	                            + packageName + "': " + e.getMessage());
	                }
	                // icons.put(processes.get(k).topActivity.getPackageName(),ico);
	                icons.add(ico);
            }
        }
    }
    
    public void sendToInkCase(String path) {

		//File fileToSend = new File(getExternalCacheDir(), "helloInkCase.jpg");
		
//		File f = new File(getCacheDir()+"/Whatsapp.jpg");
//        if (!f.exists()) try {
//        	
//        	Log.i(TAG, "TRY");
//        	
//          InputStream is = getAssets().open("Whatsapp.jpg");
//          int size = is.available();
//          byte[] buffer = new byte[size];
//          is.read(buffer);
//          is.close();
//
//
//          FileOutputStream fos = new FileOutputStream(f);
//          fos.write(buffer);
//          fos.close();
//        } catch (Exception e) { throw new RuntimeException(e); }
//
//        
//        //mapView.setMapFile(f.getPath());
//        Log.i(TAG, "f.getPath(): " + f.getPath());
//		
//		//File fileToSend = new File(getAssets(), "Whatsapp.png");
//
//		if (f.exists()) {
//			try {
//				Intent sharingIntent = new Intent(
//						InkCase.ACTION_SEND_TO_INKCASE);
//				sharingIntent.setType("image/jpeg");
//				sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,
//						InkCase.CODE_SEND_WALLPAPER);
//				sharingIntent.putExtra(Intent.EXTRA_STREAM,
//						Uri.fromFile(f));
//				sharingIntent.putExtra(InkCase.EXTRA_APP_NAME, InkCase.APP_NOW);
//				sharingIntent.putExtra(InkCase.EXTRA_FILENAME,
//						f.getName());
//				InkCaseUtils.startInkCaseActivity(this, sharingIntent);
//			} catch (Exception e) {
//				Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
//			}
//
//		}
    	
//    	Bitmap icon = BitmapFactory.decodeResource(context.getResources(),
//                R.drawable.icon_resource);
    	
//    	AssetManager assetManager = getAssets();
//
//        InputStream istr;
//        Bitmap bitmap = null;
//        try {
//            istr = assetManager.open("fb.png");
//            bitmap = BitmapFactory.decodeStream(istr);
//        } catch (IOException e) {
//            // handle exception
//        }
//        
//        if (bitmap == null)
//			throw new RuntimeException("No image to send");
//
//        File fileToSend = new File(getExternalCacheDir(), "helloInkCase.jpg");
//		try {
//			FileOutputStream fOut = new FileOutputStream(fileToSend);
//
//			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
//			fOut.flush();
//			fOut.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//        
//    	
//    	try {
//    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
//    	    sharingIntent.setType("image/jpeg");
//    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
//    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
//    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
//    	    InkCaseUtils.startInkCaseActivity(this, sharingIntent);
//    	 } catch (Exception e) {
//    	    Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show();
//    	 }
    	
        InputStream istr;
        Bitmap bitmap = null;
        bitmap = drawableToBitmap(icons.get(4));
        Paint paint = new Paint();
        paint.setColor(getResources().getColor(android.R.color.white));
        paint.setStyle(Paint.Style.FILL);
        bitmap = Bitmap.createScaledBitmap(bitmap, 150, 175, false);
        //bitmap = Bitmap.
        Bitmap newBitmap = Bitmap.createBitmap(300, 600, Config.RGB_565);
        Canvas canvas = new Canvas(newBitmap);
        canvas.drawBitmap(newBitmap, 300, 600, paint);
        canvas.drawPaint(paint);
        paint.setColor(Color.BLACK);
        paint.setTextSize(68); 
        canvas.drawText("youtube", 26, 440, paint);
        canvas.drawBitmap(bitmap, 75, 160, paint);
        
        if (newBitmap == null)
			throw new RuntimeException("No image to send");

        File fileToSend = new File(getExternalCacheDir(), "helloInkCase.jpg");
		try {
			FileOutputStream fOut = new FileOutputStream(fileToSend);

			newBitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
			fOut.flush();
			fOut.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
        
    	
    	try {
    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
    	    sharingIntent.setType("image/jpeg");
    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
    	    //sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
    	    InkCaseUtils.startInkCaseActivity(this, sharingIntent);
    	 } catch (Exception e) {
    	    Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show();
    	 }
    	
	}
    
    public static Bitmap drawableToBitmap (Drawable drawable) {
        if (drawable instanceof BitmapDrawable) {
            return ((BitmapDrawable)drawable).getBitmap();
        }

        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap); 
        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        drawable.draw(canvas);

        return bitmap;
    }

}








package com.cosmo.socialdisplays;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import android.app.ActivityManager;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.util.Log;
import android.widget.Toast;

import com.gajah.inkcaseLib.InkCase;
import com.gajah.inkcaseLib.InkCaseUtils;

public class RunningAppReceiver extends BroadcastReceiver {
	 
    public final String TAG = "CheckRunningApplicationReceiver"; 
    Context mContext;
    MainActivity mActivity = null;
    
    @Override
    public void onReceive(Context mContext, Intent anIntent) {
    	this.mContext = mContext;

    	try {
    		ActivityManager am = (ActivityManager) mContext
                    .getSystemService(Context.ACTIVITY_SERVICE);
             
            List<ActivityManager.RunningTaskInfo> alltasks = am
                    .getRunningTasks(1);
 
            for (ActivityManager.RunningTaskInfo aTask : alltasks) {
 
            	
            	Drawable icon = null;
            	icon = mContext.getPackageManager().getApplicationIcon(
            			aTask.topActivity.getPackageName());
            	
            	mContext.getPackageManager().getPackageInfo(aTask.topActivity.getPackageName(), 0);
            	
            	ComponentName componentInfo = aTask.topActivity;
            	   componentInfo.getPackageName();
            	
            	icon = mContext.getResources().getDrawable(R.drawable.c);
            	   
//            	mActivity.sendToInkCase("");
//            	sendToInkCase(icon);
//            	Log.e("icon: ", "" + icon);
//            	Log.e("classname: ", "" + aTask.topActivity.getClassName());
//            	Log.e("packagename: ", "" + aTask.topActivity.getPackageName());
//            	Log.e("componentInfo: ", "" + componentInfo);
            }
 
        } catch (Throwable t) {
            Log.i(TAG, "Throwable caught: "
                        + t.getMessage(), t);
        }
         
    }
    
    
    
    public void sendToInkCase(Drawable icon) {
    	
    	AssetManager assetManager = mContext.getAssets();

        InputStream istr;
        Bitmap bitmap = null;
        try {
            istr = assetManager.open("fb.png");
            bitmap = BitmapFactory.decodeStream(istr);
        } catch (IOException e) {
            // handle exception
        }
        
        if (bitmap == null)
			throw new RuntimeException("No image to send");

        File fileToSend = new File(mContext.getExternalCacheDir(), "helloInkCase.jpg");
		try {
			FileOutputStream fOut = new FileOutputStream(fileToSend);

			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
			fOut.flush();
			fOut.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
        
    	
    	try {
    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
    	    sharingIntent.setType("image/jpeg");
    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
    	 } catch (Exception e) {
    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
    	 }
    	
//    	BitmapDrawable bitDw = ((BitmapDrawable) icon);
//        Bitmap bitmap = bitDw.getBitmap();
//    	
//    	
//    	//Bitmap icon = BitmapFactory.decodeResource(mContext.getResources(),R.drawable.c);
//    	//Bitmap bitmap = BitmapFactory.decode;
//    	
//        
//        Log.i(TAG, "" + icon);
//        if (icon == null)
//			throw new RuntimeException("No image to send");
//
//        File fileToSend = new File(mContext.getCacheDir(), "helloInkCase.jpg");
//		try {
//			FileOutputStream fOut = new FileOutputStream(fileToSend);
//
//			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
//			fOut.flush();
//			fOut.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//    	
//    	try {
//    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
//    	    sharingIntent.setType("image/jpeg");
//    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
//    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
//    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
//    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
//    	 } catch (Exception e) {
//    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
//    	 }
    	
    	
	}
}




package com.cosmo.socialdisplays;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import android.app.ActivityManager;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.util.Log;
import android.widget.Toast;

import com.gajah.inkcaseLib.InkCase;
import com.gajah.inkcaseLib.InkCaseUtils;

public class RunningAppReceiver extends BroadcastReceiver {
	 
    public final String TAG = "CheckRunningApplicationReceiver"; 
    Context mContext;
    MainActivity mActivity = null;
    
    @Override
    public void onReceive(Context mContext, Intent anIntent) {
    	this.mContext = mContext;

    	try {
    		ActivityManager am = (ActivityManager) mContext
                    .getSystemService(Context.ACTIVITY_SERVICE);
             
            List<ActivityManager.RunningTaskInfo> alltasks = am
                    .getRunningTasks(1);
 
            for (ActivityManager.RunningTaskInfo aTask : alltasks) {
 
            	
            	Drawable icon = null;
            	icon = mContext.getPackageManager().getApplicationIcon(
            			aTask.topActivity.getPackageName());
            	
            	mContext.getPackageManager().getPackageInfo(aTask.topActivity.getPackageName(), 0);
            	
            	ComponentName componentInfo = aTask.topActivity;
            	   componentInfo.getPackageName();
            	
//            	mActivity.sendToInkCase("");
            	sendToInkCase(icon);
//            	Log.e("icon: ", "" + icon);
//            	Log.e("classname: ", "" + aTask.topActivity.getClassName());
//            	Log.e("packagename: ", "" + aTask.topActivity.getPackageName());
//            	Log.e("componentInfo: ", "" + componentInfo);
            }
 
        } catch (Throwable t) {
            Log.i(TAG, "Throwable caught: "
                        + t.getMessage(), t);
        }
         
    }
    
    public void sendToInkCase(Drawable icon) {
    	Log.i(TAG, "ZER0");
    	
    	//Bitmap icon = BitmapFactory.decodeResource(mContext.getResources(),R.drawable.c);
    	Bitmap bitmap = BitmapFactory.decode;
    	
        
        Log.i(TAG, "" + icon);
        if (icon == null)
			throw new RuntimeException("No image to send");

        File fileToSend = new File(mContext.getCacheDir(), "helloInkCase.jpg");
		try {
			FileOutputStream fOut = new FileOutputStream(fileToSend);

			icon.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
			fOut.flush();
			fOut.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		Log.i(TAG, "TWO");
    	
    	try {
    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
    	    sharingIntent.setType("image/jpeg");
    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
    	 } catch (Exception e) {
    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
    	 }
    	
//    	AssetManager assetManager = mContext.getAssets();
//
//        InputStream istr;
//        Bitmap bitmap = null;
//        try {
//            istr = assetManager.open("5C.png");
//            bitmap = BitmapFactory.decodeStream(istr);
//        } catch (IOException e) {
//            // handle exception
//        }
//        Log.i(TAG, "ONE");
//        if (bitmap == null)
//			throw new RuntimeException("No image to send");
//
//        File fileToSend = new File(mContext.getExternalCacheDir(), "helloInkCase.jpg");
//		try {
//			FileOutputStream fOut = new FileOutputStream(fileToSend);
//
//			bitmap.compress(Bitmap.CompressFormat.JPEG, 50, fOut);
//			fOut.flush();
//			fOut.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//		Log.i(TAG, "TWO");
//    	
//    	try {
//    	    Intent sharingIntent = new Intent(InkCase.ACTION_SEND_TO_INKCASE);
//    	    sharingIntent.setType("image/jpeg");
//    	    sharingIntent.putExtra(InkCase.EXTRA_FUNCTION_CODE,InkCase.CODE_SEND_WALLPAPER);
//    	    sharingIntent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(fileToSend));
//    	    sharingIntent.putExtra(InkCase.EXTRA_FILENAME,fileToSend.getName());
//    	    sharingIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//    	    InkCaseUtils.startInkCaseActivity(mContext, sharingIntent);
//    	 } catch (Exception e) {
//    	    Toast.makeText(mContext, e.getMessage(), Toast.LENGTH_SHORT).show();
//    	 }
    	
	}
}






@Override
    public void onReceive(Context mContext, Intent anIntent) {
         

    	final int START_TASK_TO_FRONT = 2;
    	RunningAppProcessInfo currentInfo = null;
    	Field field = null;
    	
    	try {
            field = RunningAppProcessInfo.class.getDeclaredField("processState");
        } catch (Exception e) {
            Log.i(TAG, "Exception : "+e);
        }
    	
        ActivityManager am = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);
        List<RunningAppProcessInfo> appList = am.getRunningAppProcesses();
        
        for (RunningAppProcessInfo app : appList) 
        {
            if (app.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND) 
            {
                Integer state = null;
                try {
                    state = field.getInt( app );
                } catch (Exception e) {
                    Log.i(TAG, "Exception : "+e);
                }
                if (state != null && state == START_TASK_TO_FRONT) {
                    currentInfo = app;
                    break;
                }
            }
        }
        //return currentInfo;
        Log.i(TAG, "currentInfo : " + currentInfo.processName);
//        Log.i(TAG, "currentInfo : " + currentInfo.processName.toString());
//        Log.i(TAG, "currentInfo : " + currentInfo.toString());
//        Log.i(TAG, "currentInfo : " + currentInfo.describeContents());
    }





public class StartupReceiver extends BroadcastReceiver {
	 
    static final String TAG = "SR";
     
    final int startupID = 1111111;
 
     
    @Override
    public void onReceive(Context context, Intent intent) {
         
        // Create AlarmManager from System Services
        final AlarmManager alarmManager = (AlarmManager) context
                    .getSystemService(Context.ALARM_SERVICE);
        try{
                // Create pending intent for CheckRunningApplicationReceiver.class 
                // it will call after each 5 seconds
                 
                Intent i7 = new Intent(context, CheckRunningApplicationReceiver.class);
                PendingIntent ServiceManagementIntent = PendingIntent.getBroadcast(context,
                        startupID, i7, 0);
                alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME,
                        SystemClock.elapsedRealtime(), 
                        5000, ServiceManagementIntent);
                 
                 
            } catch (Exception e) {
                Log.i(TAG, "Exception : "+e);
            }
             
        }
     
}

        try {
             
            // Using ACTIVITY_SERVICE with getSystemService(String) 
            // to retrieve a ActivityManager for interacting with the global system state.
             
            ActivityManager am = (ActivityManager) mContext
                    .getSystemService(Context.ACTIVITY_SERVICE);
             
            // Return a list of the tasks that are currently running, 
            // with the most recent being first and older ones after in order.
            // Taken 1 inside getRunningTasks method means want to take only 
            // top activity from stack and forgot the olders.
             
            List<ActivityManager.RunningTaskInfo> alltasks = am
                    .getRunningTasks(1);
 
            // 
            for (ActivityManager.RunningTaskInfo aTask : alltasks) {
 
            	
            	Drawable icon = null;
            	icon = mContext.getPackageManager().getApplicationIcon(
            			aTask.topActivity.getPackageName());
            	
            	mContext.getPackageManager().getPackageInfo(aTask.topActivity.getPackageName(), 0);
            	
            	ComponentName componentInfo = aTask.topActivity;
            	   componentInfo.getPackageName();
            	
            	Log.e("icon: ", "" + icon);
            	Log.e("classname: ", "" + aTask.topActivity.getClassName());
            	Log.e("packagename: ", "" + aTask.topActivity.getPackageName());
            	Log.e("componentInfo: ", "" + componentInfo);
                 
            }
 
        } catch (Throwable t) {
            Log.i(TAG, "Throwable caught: "
                        + t.getMessage(), t);
        }
         
    }

if (aTask.topActivity.getClassName().equals("com.android.phone.InCallScreen")
                    || aTask.topActivity.getClassName().equals("com.android.contacts.DialtactsActivity"))
                {
                    // When user on call screen show a alert message
                    Toast.makeText(mContext, "Phone Call Screen.", Toast.LENGTH_LONG).show();   
                }
                 
                // Used to check for SMS screen
                 
                if (aTask.topActivity.getClassName().equals("com.android.mms.ui.ConversationList")
                        || aTask.topActivity.getClassName().equals("com.android.mms.ui.ComposeMessageActivity"))
                {
                    // When user on Send SMS screen show a alert message
                    Toast.makeText(mContext, "Send SMS Screen.", Toast.LENGTH_LONG).show(); 
                }
                 
                 
                // Used to check for CURRENT example main screen
                 
                String packageName = "com.example.checkcurrentrunningapplication";
                 
                if (aTask.topActivity.getClassName().equals(
                        packageName + ".Main"))
                {
                   // When opens this example screen then show a alert message
                   Toast.makeText(mContext, "Check Current Running Application Example Screen.", 
                                   Toast.LENGTH_LONG).show();   
                }
                 
                 
                // These are showing current running activity in logcat with 
                // the use of different methods
                 
                Log.i(TAG, "===============================");
                 
                    Log.i(TAG, "aTask.baseActivity: "
                                + aTask.baseActivity.flattenToShortString());
                     
                    Log.i(TAG, "aTask.baseActivity: "
                                + aTask.baseActivity.getClassName());
                     
                    Log.i(TAG, "aTask.topActivity: "
                                + aTask.topActivity.flattenToShortString());
                     
                    Log.i(TAG, "aTask.topActivity: "
                                + aTask.topActivity.getClassName());
                    
                Log.i(TAG, "===============================");